name: Numpy Neural Network CI

on: 
    push: 
        branches: [dev]

jobs:
    test:
        name: Run Unit and E2E Tests
        runs-on: ubuntu-latest

        steps:
        -   name: Checkout Repository
            uses: actions/checkout@v4

        -   name: Set up Python 3.13
            uses: actions/setup-python@v5
            with:
                python-version: '3.13'
        
        -   name: Install Poetry
            run: |
                python -m pip install poetry==2.0.0
        
        -   name: Configure Poetry
            run: |
                python -m poetry config virtualenvs.in-project true
        
        -   name: Cache Poetry virtualenv
            uses: actions/cache@v4
            with:
                path: ./.venv
                key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
                restore-keys: |
                    ${{ runner.os }}-venv-

        -   name: Install Dependencies
            run: |
                poetry install --no-interaction --no-root
        
        -   name: Run Unit Tests
            run: |
                poetry run python -m unittest discover tests/unit -p "test_*.py"
        
        -   name: Run E2E Tests
            run: |
                poetry run python -m unittest discover tests/e2e -p "test_*.py"


    create-pr:
        needs: test
        runs-on: ubuntu-latest
        steps:
        -   name: Checkout Repository
            uses: actions/checkout@v4
            with:
                ref: main
                fetch-depth: 0  # Fetch all history for all branches and tags
        
        -   name: Check if PR already exists
            id: check-pr
            run: |
                if [ -n "$existing_pr" ]; then
                    echo "pr_exists=true" >> $GITHUB_OUTPUT
                    echo "pr_number=$existing_pr" >> $GITHUB_OUTPUT
                    echo "PR #$existing_pr already exists from dev to main"
                else
                    echo "pr_exists=false" >> $GITHUB_OUTPUT
                    echo "No existing PR found from dev to main"
                fi
            env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
        -   name: Create PR from dev to main 
            if: steps.check-pr.outputs.pr_exists == 'false'
            run: |
                gh pr create \
                    --head dev \
                    --base main \
                    --title "Merge dev into main" \
                    --body "Automated PR created after successful tests on dev branch." \

                **Changes:**
                - All tests passing on dev branch
                - Ready for merge to main
                
                **Test Results:**
                - Unit tests passed
                - E2E tests passed" \
                    --reviewer "" \
                    --assignee "@me"
            env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        -   name: Comment on existing PR
            if: steps.check-pr.outputs.pr_exists == 'true'
            run: |
                gh pr comment ${{ steps.check-pr.outputs.pr_number }} \
                    --body "All tests have passed on dev branch. Ready for merge to main."
                - Unit tests passed
                - E2E tests passed"
            env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}